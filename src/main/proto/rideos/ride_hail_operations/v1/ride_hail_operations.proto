/*
 * Copyright 2018-2019 rideOS, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package rideos.ride_hail_operations.v1;
option java_package = "ai.rideos.api.ride_hail_operations.v1";
option objc_class_prefix = "RideHailOperations";

import "google/protobuf/timestamp.proto";

import "google/api/gapi_annotations.proto";
import "grpc/gateway/protoc-gen-swagger/options/swagger_annotations.proto";
import "rideos/geo/v1/geo.proto";
import "rideos/commons/ride_hail_commons.proto";
import "rideos/ride_hail_rider/v1/ride_hail_rider.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "RideHail Operations API"
        version: "1.0"
    }
    responses: {
        key: "400"
        value: {
            description: "The request was invalid."
        }
    }
    responses: {
        key: "401"
        value: {
            description: "The request was not correctly authorized. Please ensure you passed the correct API Key.";
        }
    }
    responses: {
        key: "403"
        value: {
            description: "Returned when the user does not have permission to access the resource.";
        }
    }
    responses: {
        key: "429"
        value: {
            description: "The rate limit was exceeded, please try again.";
        }
    }
};

message CreateFleetRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            required: ["id", "info"]
        }
    };

    // Client-provided identifier for the fleet. This value needs to be unique per partner and cannot be reused.
    string id = 1;
    // Information about the fleet, such as display names and custom properties.
    ride_hail_commons.FleetInfo info = 2;
}

message CreateFleetResponse {
}

message RemoveFleetRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            required: ["id"]
        }
    };

    // Client-provided identifier of the fleet.
    string id = 1;
}

message RemoveFleetResponse {
}

message GetFleetsRequest {
}

message GetFleetsResponse {
    // List of all fleets for a partner
    repeated ride_hail_commons.Fleet fleet = 1;
}

message GetVehiclesRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            required: ["fleet_id"]
        }
    };

    // Client-provided identifier of the fleet that contains the vehicles
    string fleet_id = 1;
}

message GetVehiclesResponse {
    // List of all vehicles in the fleet of a partner
    repeated ride_hail_commons.Vehicle vehicle = 1;
}

message GetTripsRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            required: ["fleet_id"]
        } };

    // Client-provided identifier of the fleet that contains the trips
    string fleet_id = 1;

    // Only trips that terminated after `from` (or are still active) will be returned, defaults to now.
    google.protobuf.Timestamp from = 2;

    // Only trips that were created before `to` will be returned, by defaults to now.
    google.protobuf.Timestamp to = 3;
}

message GetTripsResponse {
    // A list of all trips active in the given time window and fleet
    repeated ride_hail_commons.Trip trip = 1;
}

message SetVehicleRoutingConstraintsRequest {
    string vehicle_id = 1;
    ride_hail_commons.RoutingConstraints constraints = 2;
}

message SetVehicleRoutingConstraintsResponse {
}

message AddVehicleRoutingConstraintsRequest {
    string vehicle_id = 1;
    ride_hail_commons.RoutingConstraints constraints = 2;
}

message AddVehicleRoutingConstraintsResponse {
}

message GetVehicleRoutingConstraintsRequest {
    string vehicle_id = 1;
}

message GetVehicleRoutingConstraintsResponse {
    ride_hail_commons.RoutingConstraints constraints = 1;
}

message RemoveVehicleRoutingConstraintsRequest {
    string vehicle_id = 1;
    ride_hail_commons.RoutingConstraints constraints = 2;
}

message RemoveVehicleRoutingConstraintsResponse {
}

message ClearVehicleRoutingConstraintsRequest {
    string vehicle_id = 1;
}

message ClearVehicleRoutingConstraintsResponse {
}

message SetFleetRoutingConstraintsRequest {
    string fleet_id = 1;
    ride_hail_commons.RoutingConstraints constraints = 2;
}

message SetFleetRoutingConstraintsResponse {
}

message AddFleetRoutingConstraintsRequest {
    string fleet_id = 1;
    ride_hail_commons.RoutingConstraints constraints = 2;
}

message AddFleetRoutingConstraintsResponse {
}

message GetFleetRoutingConstraintsRequest {
    string fleet_id = 1;
}

message GetFleetRoutingConstraintsResponse {
    ride_hail_commons.RoutingConstraints constraints = 1;
}

message RemoveFleetRoutingConstraintsRequest {
    string fleet_id = 1;
    ride_hail_commons.RoutingConstraints constraints = 2;
}

message RemoveFleetRoutingConstraintsResponse {
}

message ClearFleetRoutingConstraintsRequest {
    string fleet_id = 1;
}

message ClearFleetRoutingConstraintsResponse {
}

message AddTripRequest {

    // Client-provided identifier for the trip. Needs to be unique per partner and can not be reused.
    string id = 1;
    // Client-provided identifier for the operator.
    string requestor_id = 2;
    // The identifier of the fleet that will serve the trip.
    string fleet_id = 3;

    // Immutable definition of a trip like location, to change it a new trip needs to be requested.
    ride_hail_commons.TripDefinition definition = 4;
    // Options to configure the trip assigment.

    rideos.ride_hail_rider.v1.DispatchParameters dispatch_parameters = 5;
    // Additional properties for storing partner-specific information about the trip, as string key value pairs.
    map<string, string> properties = 6;

}

message AddTripResponse {
}

message CancelTripRequest {
    // Identifier of the trip to cancel.
    string id = 1;
    // Optional description outlining the reason for canceling the trip.
    string description = 2;
}

message CancelTripResponse {
}

//////////// DEPRECATED REQUEST/RESPONSE MESSAGES BELOW ////////////

message MarkVehicleStaleRequest {
    string vehicle_id = 1;
}

message MarkVehicleStaleResponse {

}

message GetAvailableVehiclesRequest {
    string fleet_id = 1;
}

message GetAvailableVehiclesResponse {
    repeated ride_hail_commons.AvailableVehicle vehicles = 1;
}

message AddPassengerInfoRequest {
    string passenger_id = 1;
    string passenger_name = 2;
}

message AddPassengerInfoResponse {
}

message GetFleetMetadataRequest {
    string fleet_id = 1;
}

message GetFleetMetadataResponse {
    ride_hail_commons.FleetMetadata fleet_metadata = 1;
}

message SetFleetMetadataRequest {
    ride_hail_commons.FleetMetadata fleet_metadata = 1;
}

message SetFleetMetadataResponse {
}

message DeleteFleetMetadataRequest {
    string fleet_id = 1;
}

message DeleteFleetMetadataResponse {
}

message GetFleetActiveTripsRequest {
    string fleet_id = 1;
}

message GetFleetActiveTripsResponse {
    repeated ride_hail_commons.ActiveTripInfo active_trip_info = 1 [deprecated = true];
    repeated ride_hail_commons.DeprecatedTrip trip = 2;
}

message GetActiveVehiclesInFleetRequest {
    string fleet_id = 1;

    // Maximum number of vehicles to return
    int32 max_vehicles = 2;
}

message GetActiveVehiclesResponse {
    repeated ride_hail_commons.VehicleUIState vehicles = 1;
    repeated ride_hail_commons.DeprecatedVehicle deprecated_vehicle = 2;
}

message GetStopRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            required: ["stop_id"]
        }
    };

    string stop_id = 1;
}

message GetStopResponse {
    ride_hail_commons.PredefinedStop stop = 1;
}

message GetStopsInAreaRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            required: ["area"]
        }
    };

    geo.v1.Shape area = 1;
}

message GetStopsInAreaResponse {
    repeated ride_hail_commons.PredefinedStop stop = 1;
}

message AddOrReplaceStopRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            required: ["stop"]
        }
    };

    ride_hail_commons.PredefinedStop stop = 1;
}

message AddOrReplaceStopResponse {

}

message DeleteStopRequest {
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_schema) = {
        json_schema: {
            required: ["stop_id"]
        } };

    string stop_id = 1;
}

message DeleteStopResponse {

}

service RideHailOperationsService {

    // Create a fleet
    //
    // Creates a new fleet with a partner-provided identifier and additional properties like a display name.
    // Fleet properties are immutable and fleet identifiers cannot be reused after a fleet has been removed.
    // A fleet needs to be created before a vehicle can be assigned to it.
    rpc CreateFleet (CreateFleetRequest) returns (CreateFleetResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/CreateFleet"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1)"
        };
    }

    // Remove a fleet
    //
    // Removes a fleet with given identifier. A fleet cannot be removed if there are still vehicles in it.
    rpc RemoveFleet (RemoveFleetRequest) returns (RemoveFleetResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/RemoveFleet"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1)"
        };
    }

    // Retrieve all fleets
    //
    // Returns a list of all fleets owned by the partner, excluding removed fleets.
    // Might return a fleet with empty identifier, which denotes the default fleet.
    rpc GetFleets (GetFleetsRequest) returns (GetFleetsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/GetFleets"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1)"
        };
    }

    // Retrieve all vehicles
    //
    // Returns a list of all vehicles for a given fleet, both active and inactive.
    // A vehicle will contain information about its state and current plan, contact information for the driver, and
    // capacity.
    rpc GetVehicles (GetVehiclesRequest) returns (GetVehiclesResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/GetVehicles"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1)"
        };
    }

    // Retrieve all trips
    //
    // Returns a list of all trips for a given fleet, both active and completed, in the provided time window of the
    // request. If the timestamps are not set in the request, all currently active trips will be returned by default.
    rpc GetTrips (GetTripsRequest) returns (GetTripsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/GetTrips"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1)"
        };
    }

    // Set vehicle-level routing constraints. (Experimental)
    //
    // These constraints will be applied to the named vehicle, both during the dispatch process and also
    // when returning routes in the rider and driver APIs.
    rpc SetVehicleRoutingConstraints (SetVehicleRoutingConstraintsRequest) returns (SetVehicleRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/SetVehicleRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Add whitelist and/or blacklist routing constraints at vehicle-level. (Experimental)
    //
    // This constraint will be added and applied to the named vehicle, both during the dispatch process and also
    // when returning routes in the rider and driver APIs.
    rpc AddVehicleRoutingConstraints (AddVehicleRoutingConstraintsRequest) returns (AddVehicleRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/AddVehicleRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Get vehicle-level routing constraints. (Experimental)
    rpc GetVehicleRoutingConstraints (GetVehicleRoutingConstraintsRequest) returns (GetVehicleRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/GetVehicleRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Remove included whitelist and/or blacklist routing constraints from vehicle. (Experimental)
    rpc RemoveVehicleRoutingConstraints (RemoveVehicleRoutingConstraintsRequest) returns (RemoveVehicleRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/RemoveVehicleRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Clear all vehicle-level routing constraints. (Experimental)
    rpc ClearVehicleRoutingConstraints (ClearVehicleRoutingConstraintsRequest) returns (ClearVehicleRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/ClearVehicleRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Set fleet-level routing constraints. (Experimental)
    //
    // These constraints will be applied to the named fleet, both during the dispatch process and also
    // when returning routes in the rider and driver APIs.
    rpc SetFleetRoutingConstraints (SetFleetRoutingConstraintsRequest) returns (SetFleetRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/SetFleetRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Add whitelist and/or blacklist routing constraints at fleet-level. (Experimental)
    //
    // This constraint will be added and applied to the named fleet, both during the dispatch process and also
    // when returning routes in the rider and driver APIs.
    rpc AddFleetRoutingConstraints (AddFleetRoutingConstraintsRequest) returns (AddFleetRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/AddFleetRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Get fleet-level routing constraints. (Experimental)
    //
    // The default RoutingConstraints object is used to mean "unconstrained".
    rpc GetFleetRoutingConstraints (GetFleetRoutingConstraintsRequest) returns (GetFleetRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/GetFleetRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Remove included whitelist and/or blacklist routing constraints from fleet. (Experimental)
    rpc RemoveFleetRoutingConstraints (RemoveFleetRoutingConstraintsRequest) returns (RemoveFleetRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/RemoveFleetRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Clear all fleet-level routing constraints. (Experimental)
    rpc ClearFleetRoutingConstraints (ClearFleetRoutingConstraintsRequest) returns (ClearFleetRoutingConstraintsResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/ClearFleetRoutingConstraints"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Add a trip (Experimental)
    //
    // Creates a new trip for a given vehicle in the `WAITING_FOR_ASSIGNMENT` state.
    // The operation succeeds if the trip creation was successful and does not wait until a trip is assigned.
    // Currently, only Relocate trips are supported for trips created from the operator.
    // NOTE: Vehicle cannot be accepting trips when operational trip is dispatched.
    rpc AddTrip (AddTripRequest) returns (AddTripResponse) {
        option (google.api.http) = {
                post: "/ride-hail-operations/v1/AddTrip"
                body: "*"
            };
    }

    // Cancel a trip (Experimental)
    //
    // Cancel a trip and gives the option of providing a reason for the cancellation to be propagated to the vehicle,
    // if it has nonpicked up tasks assigned, and riders, if they they have not been picked up.
    rpc CancelTrip (CancelTripRequest) returns (CancelTripResponse) {
        option (google.api.http) = {
                post: "/ride-hail-operations/v1/CancelTrip"
                body: "*"
            };
    }

    // Get a stop by ID (Experimental)
    rpc GetStop (GetStopRequest) returns (GetStopResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/GetStop"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Get all stops within a specified area  (Experimental)
    rpc GetStopsInArea (GetStopsInAreaRequest) returns (GetStopsInAreaResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/GetStopsInArea"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Add or replace a stop (Experimental)
    //
    // Add the stop if the identifier does not match an existing stop, and otherwise overwrites the existing stop.
    rpc AddOrReplaceStop (AddOrReplaceStopRequest) returns (AddOrReplaceStopResponse) {
        option (google.api.http) = {
                post: "/ride-hail-operations/v1/AddOrReplaceStop"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    // Delete a stop  (Experimental)
    //
    // For a given identifier, delete the referenced stop.
    rpc DeleteStop (DeleteStopRequest) returns (DeleteStopResponse) {
        option (google.api.http) = {
            post: "/ride-hail-operations/v1/DeleteStop"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "RideHail Operations API (v1 - Experimental)"
        };
    }

    //////////// DEPRECATED METHODS BELOW ////////////

    // Get the available vehicles
    rpc GetAvailableVehicles (GetAvailableVehiclesRequest) returns (GetAvailableVehiclesResponse) {
        option deprecated = true;
    }

    // Get any metadata associated with a certain fleet.
    rpc GetFleetMetadata (GetFleetMetadataRequest) returns (GetFleetMetadataResponse) {
        option deprecated = true;
    }

    // Set metadata to be associated with a fleet.
    rpc SetFleetMetadata (SetFleetMetadataRequest) returns (SetFleetMetadataResponse) {
        option deprecated = true;
    }

    // Delete metadata associated with a fleet.
    rpc DeleteFleetMetadata (DeleteFleetMetadataRequest) returns (DeleteFleetMetadataResponse) {
        option deprecated = true;
    }

    // Get all "active" tasks in a fleet.
    //
    // See the documentation on "Tasks" for more information:
    // https://github.com/rideOS/examples/blob/master/grpc/docs/dispatch/v2/data_model_guide.md#task-state-transitions.
    rpc GetFleetActiveTrips (GetFleetActiveTripsRequest) returns (GetFleetActiveTripsResponse) {
        option deprecated = true;
    }

    rpc GetFleetsRC (GetFleetsRequest) returns (GetFleetsResponse) {
        option deprecated = true;
    }
}
